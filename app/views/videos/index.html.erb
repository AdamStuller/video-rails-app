<!--<p id="notice"><%#= notice %></p>-->
<div class="container from-top-padding">
  <div class="row">
    <div class="container">
      <div class="chips-autocomplete col m10 ">
      </div>
      <div class="col m2">
        <a id='search-button' class="waves-effect waves-light btn blue lighten-1">Search</a>
      </div>
    </div>

  </div>

  <div class="row">

<!--    <div class="s">-->
    <div id="products" class="scrollable">
        <% @videos.each do |video| %>
          <div class="col m3">
              <div class="card blue lighten-1">
                <div class="card-image">
                  <%= link_to video do %>
                    <%= image_tag(url_for(video.thumbnail)) %>
                  <%end %>
                  <span class="card-title"><%= video.name %></span>
<!--                  <a class="btn-floating halfway-fab waves-effect waves-light blue darken-1 center-align" >-->
                    <%#= @tag_hash[video.id] ?  @tag_hash[video.id] : 0 %>
<!--                  </a>-->
                  <a id="<%=video.id %>" class="add_button btn-floating halfway-fab waves-effect waves-light blue darken-1"><i class="material-icons fnuk" id="<%=video.id %>">add</i></a>
                </div>
                <div class="card-content white-text">
                  <p><%= video.desc %></p>
                </div>
                <div class="card-action">
                  <%= link_to 'Edit', edit_video_path(video), class: "white-text" %>
                  <%= link_to 'Destroy', video, method: :delete, data: { confirm: 'Are you sure?' }, class: "white-text" %>
                  <p class="white-text">Number of tags: <%= @tag_hash[video.id] ?  @tag_hash[video.id] : 0 %></p>
                </div>
              </div>
          </div>

        <% end %>
    </div>


  </div>
  <div class="row " id="pagination_row">
    <%= will_paginate @videos , :id => 'infinite-scrolling' %>
  </div>
</div>


<script>



  const tagging_index = () => {
      let tagsData = {}
      const chosenTags = []

      let tags = []
      <% @all_tags.each do |tag| %>
      tags.push('<%= tag.name %>')
      <% end %>
      tags.forEach( e => {
          tagsData[e] = null
      })

      $('#search-button').click( () => {
          console.log(chosenTags)
          jQuery.get("http://localhost:3000/tags", {tag: chosenTags},(data) => {
              const html = jQuery.parseHTML(data)
              let videos_payload, scrolling_payload
              $.each(html , (i, el) => {
                  if(el.nodeName === 'MAIN'){
                      videos_payload = el.getElementsByClassName('scrollable')
                      $('#products').replaceWith(videos_payload)
                      scrolling_payload = el.getElementsByClassName('pagination')
                      console.log(scrolling_payload)
                      if($('.pagination').length == 0){
                          $('#pagination_row').append(scrolling_payload)
                          console.log('Appended')
                      }
                      else{
                          $('.pagination').replaceWith(scrolling_payload)
                      }

                  }
              })
          })
      })

      $('.chips-autocomplete').chips({
          autocompleteOptions: {
              data: tagsData,
              limit: 5,
              minLength: 1
          },
          onChipAdd: (e , chip) => {
              let tagname = chip.childNodes[0].textContent
              console.log(tagname)
              chosenTags.push(tagname)
              $('#tags_id').val(chosenTags)
          },
          onChipDelete: (e, chip) => {
              let tagname = chip.childNodes[0].textContent
              console.log(tagname)
              let tagIndex = chosenTags.indexOf(tagname)
              if( tagIndex > -1 ){
                  chosenTags.splice(tagIndex, 1)
              }
              $('#tags_id').val(chosenTags)
          }
      });
  }

  jQuery(tagging_index)

    jQuery(addVideo)



</script>



