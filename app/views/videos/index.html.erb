<!--<p id="notice"><%#= notice %></p>-->


  <div class="row">
    <div class="container">
      <div class="chips-autocomplete col m10">
      </div>
      <div class="col m2">
        <a id='search-button' class="waves-effect waves-light btn">Search</a>
      </div>
    </div>

  </div>

  <div class="row">

<!--    <div class="s">-->
    <div id="products" class="scrollable">
        <% @videos.each do |video| %>
          <div class="col m3">
              <div class="card blue lighten-1">
                <div class="card-image">
                  <%= link_to video do %>
                    <%= image_tag(url_for(video.thumbnail)) %>
                  <%end %>
                  <span class="card-title"><%= video.name %></span>
                </div>
                <div class="card-content white-text">
                  <p><%= video.desc %></p>
                </div>
                <div class="card-action">
                  <%= link_to 'Edit', edit_video_path(video), class: "white-text" %>
                  <%= link_to 'Destroy', video, method: :delete, data: { confirm: 'Are you sure?' }, class: "white-text" %>
                </div>
              </div>
          </div>

        <% end %>
    </div>


  </div>
  <div class="row ">
    <%= will_paginate @videos , :id => 'infinite-scrolling' %>
  </div>


<script>
    let tagsData = {}
    const chosenTags = []
    document.addEventListener('DOMContentLoaded', function() {
        let tags = []
        <% @all_tags.each do |tag| %>
        tags.push('<%= tag.name %>')
        <% end %>
        tags.forEach( e => {
            tagsData[e] = null
        })

        $('#search-button').click( () => {
          console.log(chosenTags)
            jQuery.get("http://localhost:3000/tags", {tag: chosenTags},(data) => {
                const html = jQuery.parseHTML(data)
                let videos_payload, scrolling_payload
                $.each(html , (i, el) => {
                    if(el.nodeName === 'MAIN'){
                        videos_payload = el.getElementsByClassName('scrollable')
                        $('#products').replaceWith(videos_payload)
                        scrolling_payload = el.getElementsByClassName('pagination')
                        $('.pagination').replaceWith(scrolling_payload)
                    }
                })
            })
            // window.location.replace("http://localhost:3000/")
        })
    });


    $('.chips-autocomplete').chips({
        autocompleteOptions: {
            data: tagsData,
            limit: 5,
            minLength: 1
        },
        onChipAdd: (e , chip) => {
            let tagname = chip.childNodes[0].textContent
            console.log(tagname)
            chosenTags.push(tagname)
            $('#tags_id').val(chosenTags)
        },
        onChipDelete: (e, chip) => {
            let tagname = chip.childNodes[0].textContent
            console.log(tagname)
            let tagIndex = chosenTags.indexOf(tagname)
            if( tagIndex > -1 ){
                chosenTags.splice(tagIndex, 1)
            }
            $('#tags_id').val(chosenTags)
        }
    });

</script>



